package com.testwa.distest.server.web.app.mgr;import com.testwa.core.base.constant.ResultCode;import com.testwa.distest.exception.BusinessException;import com.testwa.distest.server.entity.App;import com.testwa.distest.server.entity.AppInfo;import com.testwa.distest.server.service.app.service.AppInfoService;import com.testwa.distest.server.service.app.service.AppService;import com.testwa.distest.server.web.app.vo.AppInfoVO;import com.testwa.distest.server.web.app.vo.AppInfoVersionsDetailVO;import com.testwa.distest.server.web.app.vo.AppVO;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import java.util.List;import java.util.stream.Collectors;/** * @Program: distest * @Description: 安装和卸载App的控制管理 * @Author: wen * @Create: 2018-04-09 15:44 **/@Slf4j@Componentpublic class AppInfoMgr {    @Autowired    private AppService appService;    @Autowired    private AppInfoService appInfoService;    public AppInfoVersionsDetailVO getAppDetail(Long appInfoId) {        AppInfo appInfo = appInfoService.get(appInfoId);        if(appInfo == null) {            throw new BusinessException(ResultCode.ILLEGAL_OP, "应用不存在");        }        AppInfoVO appInfoVO = new AppInfoVO();        setLastestAppToVO(appInfo, appInfoVO);        List<App> apps = appService.getAllVersions(appInfo);        AppInfoVersionsDetailVO vo = new AppInfoVersionsDetailVO();        BeanUtils.copyProperties(appInfo, appInfoVO);        vo.setAppInfo(appInfoVO);        if(apps != null && !apps.isEmpty()) {            List<AppVO> appVOList = apps.stream().map(app -> {                AppVO appVO = new AppVO();                BeanUtils.copyProperties(app, appVO);                return appVO;            }).collect(Collectors.toList());            vo.setVersions(appVOList);        }        return vo;    }    public void setLastestAppToVO(AppInfo appInfo, AppInfoVO appInfoVO) {        App lastestApp = appService.get(appInfo.getLatestAppId());        AppVO lastAppVO = new AppVO();        BeanUtils.copyProperties(lastestApp, lastAppVO);        appInfoVO.setLatestApp(lastAppVO);    }}