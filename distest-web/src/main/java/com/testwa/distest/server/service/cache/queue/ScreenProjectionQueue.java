package com.testwa.distest.server.service.cache.queue;import com.google.protobuf.ByteString;import lombok.extern.slf4j.Slf4j;import org.redisson.api.RedissonClient;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import javax.annotation.Resource;import java.util.concurrent.BlockingQueue;/** * @Program: distest * @Description: * @Author: wen * @Create: 2018-06-28 20:10 **/@Slf4j@Componentpublic class ScreenProjectionQueue {    private static final String key = "screen.";//    private static final int QUEUE_SIZE = 10;    @Resource    private RedissonClient redissonClient;    private String getKey(String deviceId) {        return key + deviceId;    }    public void push(String deviceId, ByteString img) {        BlockingQueue<byte[]> queue = redissonClient.getBlockingQueue(getKey(deviceId));        queue.add(img.toByteArray());    }    public Object pop(String deviceId) {        BlockingQueue<byte[]> queue = redissonClient.getBlockingQueue(getKey(deviceId));        return queue.poll();    }    public void clear(String deviceId) {        BlockingQueue<byte[]> queue = redissonClient.getBlockingQueue(getKey(deviceId));        queue.clear();    }}