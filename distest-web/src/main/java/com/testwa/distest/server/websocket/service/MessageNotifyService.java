package com.testwa.distest.server.websocket.service;import com.alibaba.fastjson.JSON;import com.corundumstudio.socketio.SocketIOClient;import com.corundumstudio.socketio.SocketIOServer;import com.testwa.distest.server.mongo.model.ExecutorLogInfo;import com.testwa.distest.server.service.cache.mgr.SubscribeMessageMgr;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import java.util.UUID;@Slf4j@Componentpublic class MessageNotifyService {    private final SocketIOServer server;    @Autowired    private SubscribeMessageMgr subscribeMessageMgr;    @Autowired    public MessageNotifyService(SocketIOServer server){        this.server = server;    }    public void taskComplete(Long taskId){    }    public void taskNotifySubscribe(ExecutorLogInfo logInfo) {    }    /**     *@Description: 通知任务进度     *@Param: [logInfo]     *@Return: void     *@Author: wen     *@Date: 2018/4/28     */    public void taskAction(ExecutorLogInfo logInfo) {        String sessionId = subscribeMessageMgr.getSubscribeTaskActionSessionId(logInfo.getTaskId());        if(StringUtils.isBlank(sessionId)){            log.debug("sessionId is null");            return;        }        SocketIOClient client = server.getClient(UUID.fromString(sessionId));        client.sendEvent(MessageDefine.R_TASK, JSON.toJSONString(logInfo));    }}