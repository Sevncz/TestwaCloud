package com.testwa.distest.server.mongo.service;import com.testwa.core.base.exception.ParamsIsNullException;import com.testwa.core.base.vo.PageResult;import com.testwa.distest.server.mongo.model.ProcedureInfo;import com.testwa.distest.server.mongo.model.Step;import com.testwa.distest.server.mongo.repository.ProcedureInfoRepository;import com.testwa.distest.server.mongo.repository.StepRepository;import com.testwa.distest.server.service.task.form.StepListForm;import com.testwa.distest.server.service.task.form.StepPageForm;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Sort;import org.springframework.data.mongodb.core.query.Criteria;import org.springframework.data.mongodb.core.query.Query;import org.springframework.stereotype.Service;import java.util.List;/** * @Program: distest * @Description: * @Author: wen * @Create: 2018-05-21 21:51 **/@Servicepublic class StepService extends BaseService {    @Autowired    private StepRepository stepRepository;    public void save(Step entity){        stepRepository.save(entity);    }    public void delete(String entityId){        stepRepository.delete(entityId);    }    public Page<Step> findAll(PageRequest pageRequest) {        return stepRepository.findAll(pageRequest);    }    public List<Step> findByTaskId(Long taskId) {        return stepRepository.findByTaskId(taskId);    }    public PageResult<Step> findByPage(StepPageForm form) {        if(form.getTaskId() == null){            throw new ParamsIsNullException("TaskId is null");        }        if(StringUtils.isBlank(form.getDeviceId())){            throw new ParamsIsNullException("DeviceId is null");        }        Query query = new Query();        query.addCriteria(Criteria.where("taskId").is(form.getTaskId()));        query.addCriteria(Criteria.where("deviceId").is(form.getDeviceId()));        int pageNum = form.getPageNo();        int rows = form.getPageSize();        String sortField = "timestamp";        Sort sort = new Sort(Sort.Direction.ASC, sortField);        PageRequest pageRequest = new PageRequest(pageNum, rows, sort);        Page<Step> page = stepRepository.find(query, pageRequest);        PageResult<Step> result = new PageResult<>(page.getContent(), page.getTotalElements());        return result;    }    public List<Step> findList(StepListForm form) {        if(form.getTaskId() == null){            throw new ParamsIsNullException("TaskId is null");        }        if(StringUtils.isBlank(form.getDeviceId())){            throw new ParamsIsNullException("DeviceId is null");        }        Query query = new Query();        query.addCriteria(Criteria.where("taskId").is(form.getTaskId()));        query.addCriteria(Criteria.where("deviceId").is(form.getDeviceId()));        return stepRepository.find(query);    }}