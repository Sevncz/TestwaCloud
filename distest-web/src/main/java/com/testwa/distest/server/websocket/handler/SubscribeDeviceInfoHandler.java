package com.testwa.distest.server.websocket.handler;import com.alibaba.fastjson.JSON;import com.corundumstudio.socketio.AckRequest;import com.corundumstudio.socketio.SocketIOClient;import com.corundumstudio.socketio.annotation.OnEvent;import com.testwa.distest.server.entity.DeviceAndroid;import com.testwa.distest.server.service.cache.mgr.SubscribeMgr;import com.testwa.distest.server.service.device.service.DeviceService;import com.testwa.distest.server.websocket.WSFuncEnum;import com.testwa.distest.server.websocket.service.PushCmdService;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;@Slf4j@Componentpublic class SubscribeDeviceInfoHandler {    private final static String SUB_SCREEN = "sub_screen";    private final static String SUB_LOGCAT = "sub_logcat";    @Autowired    private DeviceService deviceService;    @Autowired    private PushCmdService pushCmdService;    @Autowired    private SubscribeMgr subscribeMgr;    @OnEvent(value = SUB_SCREEN)    public void onSubscribeScreen(SocketIOClient client, String deviceId, AckRequest ackRequest) {        log.info("subscribe screen info, {}", deviceId);        if(StringUtils.isEmpty(deviceId)){            client.sendEvent("error", "deviceId不能为空");            return;        }        subscribeMgr.subscribeDeviceEvent(deviceId, WSFuncEnum.SCREEN.getValue(), client.getSessionId().toString());        if(subscribeMgr.isSubscribes(deviceId, WSFuncEnum.SCREEN.getValue())){            pushCmdService.pushScreenUploadStart(deviceId);        }        DeviceAndroid deviceAndroid = (DeviceAndroid) deviceService.findByDeviceId(deviceId);        client.sendEvent("devices", JSON.toJSON(deviceAndroid));    }    @OnEvent(value = SUB_LOGCAT)    public void onSubscribeLogcat(SocketIOClient client, String deviceId, AckRequest ackRequest) {        log.info("subscribe logcat info, {}", deviceId);        if(StringUtils.isEmpty(deviceId)){            client.sendEvent("error", "deviceId不能为空");            return;        }        subscribeMgr.subscribeDeviceEvent(deviceId, WSFuncEnum.LOGCAT.getValue(), client.getSessionId().toString());        if(subscribeMgr.isSubscribes(deviceId, WSFuncEnum.LOGCAT.getValue())){            // TODO push client notify， for upload logcat msg.        }    }}