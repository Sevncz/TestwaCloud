package com.testwa.distest.server.service.mq;import com.testwa.distest.server.entity.User;import io.rpc.testwa.msg.Register;import io.rpc.testwa.msg.UserInfo;import org.springframework.amqp.rabbit.core.RabbitMessagingTemplate;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Service;/** * @Program: distest * @Description: * @Author: wen * @Create: 2018-05-31 11:43 **/@Servicepublic class MQService {    private static final String EX_EMAIL_ACTIVE = "exchange.emailactivesender";    private static final String Q_EMAIL_ACTIVE = "queue.emailactivesender";    @Autowired    private RabbitMessagingTemplate rabbitMessagingTemplate;    @Value("${register.active.url}")    private String activeBaseUrl;    public void sendActiveEmail(User user, Long activeCode, String subffix) {        UserInfo userInfo = UserInfo.newBuilder()                .setEmail(user.getEmail())                .setIsActive(user.getIsActive())                .setUsername(user.getUsername())                .build();        String activeUrl = activeBaseUrl + "/" + activeCode + "/" + subffix;        Register register = Register.newBuilder()                .setUser(userInfo)                .setUrl(activeUrl)                .build();        rabbitMessagingTemplate.convertAndSend(EX_EMAIL_ACTIVE, Q_EMAIL_ACTIVE, register);    }}