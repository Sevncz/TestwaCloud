package com.testwa.distest.server.service.cache.queue;import lombok.extern.slf4j.Slf4j;import org.redisson.api.RBoundedBlockingQueue;import org.redisson.api.RedissonClient;import org.springframework.stereotype.Component;import javax.annotation.Resource;/** * @Program: distest * @Description: * @Author: wen * @Create: 2018-06-28 20:10 **/@Slf4j@Componentpublic class LogQueue {    private static final String key = "log.";    private static final int QUEUE_SIZE = 100;    @Resource    private RedissonClient redissonClient;    private String getKey(String deviceId) {        return key + deviceId;    }    public void push(String deviceId, byte[] logContent) {        String key = getKey(deviceId);        RBoundedBlockingQueue queue = redissonClient.getBoundedBlockingQueue(key);        queue.trySetCapacity(QUEUE_SIZE);        queue.add(logContent);        log.debug("log queue {} len = {}", key, queue.size());    }    public Object pop(String deviceId) {        String key = getKey(deviceId);        RBoundedBlockingQueue queue = redissonClient.getBoundedBlockingQueue(key);        return queue.poll();    }    public void clear(String deviceId) {        String key = getKey(deviceId);        RBoundedBlockingQueue queue = redissonClient.getBoundedBlockingQueue(key);        queue.clear();    }}