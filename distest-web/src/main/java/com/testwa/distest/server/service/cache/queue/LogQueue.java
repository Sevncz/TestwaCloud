package com.testwa.distest.server.service.cache.queue;import com.google.protobuf.ByteString;import com.testwa.core.redis.RedisCacheManager;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;/** * @Program: distest * @Description: * @Author: wen * @Create: 2018-06-28 20:10 **/@Slf4j@Componentpublic class LogQueue {    private static final String key = "log.";    private static final int QUEUE_SIZE = 100;    @Autowired    private RedisCacheManager redisCacheManager;    private String getKey(String deviceId) {        return key + deviceId;    }    public void push(String deviceId, ByteString logContent) {        String key = getKey(deviceId);        redisCacheManager.lpush(key, logContent.toByteArray());        redisCacheManager.ltrim(key, 0, QUEUE_SIZE);        log.debug("log queue {} len = {}", key, redisCacheManager.llen(key));    }    public Object pop(String deviceId) {        String key = getKey(deviceId);        return redisCacheManager.rpop(key, Byte[].class);    }    public void clear(String deviceId) {        String key = getKey(deviceId);        redisCacheManager.remove(key);    }}