package com.testwa.distest.server.web.task.controller;import com.testwa.core.base.constant.WebConstants;import com.testwa.core.base.controller.BaseController;import com.testwa.distest.server.entity.Task;import com.testwa.distest.server.web.task.execute.CompatibilityTestReportMgr;import com.testwa.distest.server.web.task.validator.TaskValidatoer;import com.testwa.distest.server.web.task.vo.Compatibility.CompatibilityTaskBaseInfoVO;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.*;import java.util.List;/** * @Program: distest * @Description: 兼容测试独有的报告 * @Author: wen * @Create: 2018-05-30 11:05 **/@Slf4j@Api("兼容测试报告")@Validated@RestController@RequestMapping(path = WebConstants.API_PREFIX + "/compatibility")public class CompatibilityTestReportController extends BaseController {    @Autowired    private TaskValidatoer taskValidatoer;    @Autowired    private CompatibilityTestReportMgr compatibilityTestReportMgr;    @ApiOperation(value="兼容测试任务基本统计信息，包括测试设备数量、执行时长、Bug数量、闪退数量")    @ResponseBody    @GetMapping(value = "/task/{taskCode}/baseInfo")    public CompatibilityTaskBaseInfoVO baseInfo(@PathVariable Long taskCode) {        Task task = taskValidatoer.validateTaskExist(taskCode);        return compatibilityTestReportMgr.getBaseInfo(task);    }    @ApiOperation(value="四大步骤的错误信息")    @ResponseBody    @GetMapping(value = "/task/{taskCode}/errorInfo")    public CompatibilityTaskBaseInfoVO errorInfo(@PathVariable Long taskCode) {        Task task = taskValidatoer.validateTaskExist(taskCode);        return compatibilityTestReportMgr.getBaseInfo(task);    }    @ApiOperation(value="每个设备的测试概况")    @ResponseBody    @GetMapping(value = "/task/{taskCode}/deviceReport")    public List deviceReport(@PathVariable Long taskCode) {        Task task = taskValidatoer.validateTaskExist(taskCode);        return compatibilityTestReportMgr.getDeviceReport(task);    }}