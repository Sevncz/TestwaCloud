package com.testwa.distest.config;import com.mongodb.MongoClient;import com.mongodb.MongoClientOptions;import com.mongodb.MongoCredential;import com.mongodb.ServerAddress;import lombok.Data;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.boot.context.properties.ConfigurationProperties;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.data.mongodb.MongoDbFactory;import org.springframework.data.mongodb.core.SimpleMongoDbFactory;import java.net.UnknownHostException;import java.util.ArrayList;import java.util.List;/** * @Program: distest * @Description: Mongodb自定义连接池配置 * @Author: wen * @Create: 2018-04-23 19:34 **/@Slf4j@Data@Configuration@ConfigurationProperties(prefix = "dis-mongo")public class MongoConfig {    private String host;    private Integer port;//    @Value("${mongodb.custom.replica-set}")//    private String replicaSet;    private String username;    private String password;    private String database;    private String authenticationDatabase;    private Integer connectionsPerHost = 10;    private Integer minConnectionsPerHost = 2;    // 覆盖默认的MongoDbFactory    @Bean    MongoDbFactory mongoDbFactory() {        //客户端配置（连接数、副本集群验证）        MongoClientOptions.Builder builder = new MongoClientOptions.Builder();        builder.connectionsPerHost(connectionsPerHost);        builder.minConnectionsPerHost(minConnectionsPerHost);//        if (replicaSet != null) {//            builder.requiredReplicaSetName(replicaSet);//        }        MongoClientOptions mongoClientOptions = builder.build();        // MongoDB地址列表        List<ServerAddress> serverAddresses = new ArrayList<>();        ServerAddress serverAddress = null;        serverAddress = new ServerAddress(host, port);        serverAddresses.add(serverAddress);        log.info("serverAddresses:" + serverAddresses.toString());        // 连接认证        List<MongoCredential> mongoCredentialList = new ArrayList<>();        if (StringUtils.isNotBlank(username)) {            mongoCredentialList.add(MongoCredential.createScramSha1Credential(                    username,                    StringUtils.isNotBlank(authenticationDatabase) ? authenticationDatabase : database,                    password.toCharArray()));        }        log.info("mongoCredentialList:" + mongoCredentialList.toString());        //创建客户端和Factory        MongoClient mongoClient = new MongoClient(serverAddresses, mongoCredentialList, mongoClientOptions);        MongoDbFactory mongoDbFactory = new SimpleMongoDbFactory(mongoClient, database);        return mongoDbFactory;    }}