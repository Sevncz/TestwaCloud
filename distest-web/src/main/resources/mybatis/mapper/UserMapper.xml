<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.testwa.distest.server.mapper.UserMapper" >
    <resultMap id="BaseResultMap" type="com.testwa.distest.server.entity.User" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="userCode" property="userCode" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="TINYINT" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="country" property="country" jdbcType="VARCHAR" />
        <result column="header" property="header" jdbcType="VARCHAR" />
        <result column="lastPasswordResetTime" property="lastPasswordResetTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="lastLoginTime" property="lastLoginTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="loginTime" property="loginTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="registerTime" property="registerTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="loginIp" property="loginIp" jdbcType="INTEGER" />
        <result column="lastLoginIp" property="lastLoginIp" jdbcType="INTEGER" />
        <result column="enabled" property="enabled" jdbcType="BOOLEAN" />
        <result column="isActive" property="isActive" jdbcType="BOOLEAN" />
        <result column="isRealNameAuth" property="isRealNameAuth" jdbcType="BOOLEAN" />
        <result column="realName" property="realName" jdbcType="VARCHAR" />
        <collection property="roles" ofType="com.testwa.distest.server.entity.Role">
            <id column="role_id" property="id"/>
            <result column="roleName" property="roleName"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List" >
        id, username, password, mobile, email, sex, nickname, address, country, header, lastPasswordResetTime, lastLoginTime, loginTime, registerTime, loginIp, lastLoginIp, enabled, isActive, isRealNameAuth, realName, userCode
    </sql>

    <select id="findList" parameterType="com.testwa.distest.server.entity.User" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            and id in
            <foreach item="id" index="index" collection="list" open="(" separator="," close=")">#{id} </foreach>
        </trim>
    </select>

    <select id="findBy" parameterType="com.testwa.distest.server.entity.User" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            and enabled = 1
            <if test="username != null">and username = #{username}</if>
            <if test="email != null">and email = #{email}</if>
            <if test="mobile != null">and mobile = #{mobile}</if>
        </trim>
    </select>
    <select id="findByUsernameList" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            and enabled = 1
            and username in
            <foreach item="name" index="index" collection="list" open="(" separator="," close=")">#{name} </foreach>
        </trim>
    </select>
    <select id="findByEmailList" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            and enabled = 1
            and email in
            <foreach item="email" index="index" collection="list" open="(" separator="," close=")">#{email} </foreach>
        </trim>
    </select>
    <select id="findByCodeList" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            and enabled = 1
            and userCode in
            <foreach item="userCode" index="index" collection="list" open="(" separator="," close=")">#{userCode} </foreach>
        </trim>
    </select>

    <select id="query" parameterType="com.testwa.distest.server.entity.User" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            and enabled = 1
            <if test="username != null">and username LIKE CONCAT(#{username}, '%')</if>
        </trim>
        order by username
        limit 10
    </select>

    <select id="getByCode" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE userCode = #{userCode}
    </select>

    <select id="getByUsername" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE username = #{username}
    </select>

    <select id="getByEmail" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE email = #{email}
    </select>

    <update id="updateActiveToTrue" >
        update user
        set isActive = 1
        where userCode = #{userCode}
    </update>
    <update id="resetPwd" >
        update user
        set password = #{password}
        where userCode = #{userCode}
    </update>
    <update id="disable" >
        update user
        set enabled = 0
        where id = #{userId}
    </update>
</mapper>