<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.testwa.distest.server.mapper.TestcaseMapper" >
    <resultMap id="BaseResultMap" type="com.testwa.distest.server.entity.Testcase" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="tag" property="tag" jdbcType="VARCHAR" />
        <result column="caseName" property="caseName" jdbcType="VARCHAR" />
        <result column="projectId" property="projectId" jdbcType="BIGINT" />
        <result column="appInfoId" property="appInfoId" jdbcType="BIGINT" />
        <result column="packageName" property="packageName" jdbcType="VARCHAR" />
        <result column="appName" property="appName" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="updateBy" property="updateBy" jdbcType="BIGINT"/>
        <result column="createBy" property="createBy" jdbcType="BIGINT"/>
        <result column="enabled" property="enabled" jdbcType="BOOLEAN" />
        <association property="createUser" javaType="com.testwa.distest.server.entity.User">
            <id column="create_id" property="id"/>
            <result column="create_username" property="username"/>
            <result column="create_email" property="email"/>
            <result column="create_phone" property="mobile"/>
            <result column="create_userCode" property="userCode"/>
        </association>
        <association property="updateUser" javaType="com.testwa.distest.server.entity.User">
            <id column="update_id" property="id"/>
            <result column="update_username" property="username"/>
            <result column="update_email" property="email"/>
            <result column="update_phone" property="mobile"/>
            <result column="update_userCode" property="userCode"/>
        </association>
        <collection property="testcaseDetails" ofType="com.testwa.distest.server.entity.TestcaseDetail">
            <id column="detail_id" property="id"/>
            <id column="scriptId" property="scriptId"/>
            <id column="testcaseId" property="testcaseId"/>
            <id column="seq" property="seq"/>
            <association property="script" javaType="com.testwa.distest.server.entity.Script">
                <id column="script_id" property="id"/>
                <result column="scriptName" property="scriptName"/>
                <result column="description" property="description"/>
                <result column="appPackage" property="appPackage"/>
                <result column="size" property="size"/>
                <result column="path" property="path"/>
                <result column="projectId" property="projectId"/>
                <result column="createTime" property="createTime"/>
                <result column="ln" property="ln" typeHandler="com.testwa.core.base.mybatis.EnumValueHandler"/>
            </association>
        </collection>
    </resultMap>

    <sql id="Base_Column_List" >
        id, caseName, tag, projectId, description, createBy, updateTime, createTime, updateBy, enabled, appInfoId, appName, packageName
    </sql>

    <select id="findBy" parameterType="com.testwa.distest.server.entity.Testcase" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM testcase
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            enabled = 1
            <if test="createBy != null">and createBy = #{createBy}</if>
            <if test="projectId != null">and projectId = #{projectId}</if>
            <if test="caseName != null">and caseName LIKE CONCAT('%', #{caseName}, '%')</if>
            <if test="appInfoId != null">and appInfoId = #{appInfoId}</if>
            <if test="packageName != null">and packageName = #{packageName}</if>
        </trim>
    </select>

    <select id="findOne" parameterType="com.testwa.distest.server.entity.Testcase" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM testcase
        WHERE id = #{key}
    </select>

    <select id="fetchOne" parameterType="com.testwa.distest.server.entity.Testcase" resultMap="BaseResultMap" >
        SELECT
        t.*,
        u.id as create_id, u.username as create_username, u.email as create_email, u.mobile as create_phone, u.userCode as create_userCode,
        u1.id as update_id, u1.username as update_username, u1.email as update_email, u1.mobile as update_phone, u1.userCode as update_userCode,
        d.id as detail_id, d.scriptId, d.testcaseId, d.seq,
        s.id as script_id, s.*
        FROM testcase t
        LEFT JOIN user u on t.createBy=u.id
        LEFT JOIN user u1 on t.updateBy=u1.id
        LEFT JOIN testcase_detail d on t.id=d.testcaseId
        LEFT JOIN script s on d.scriptId=s.id
        WHERE t.enabled = 1 and t.id = #{testcaseId}
    </select>

    <select id="findList" parameterType="com.testwa.distest.server.entity.Testcase" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM testcase
        <if test="keys != null">
            <trim prefix="WHERE" prefixOverrides="AND |OR ">
                id in
                <foreach item="id" index="index" collection="keys" open="(" separator="," close=")">#{id} </foreach>
            </trim>
        </if>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>

    <select id="findAllOrder" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM testcase
        WHERE enabled = 1
        AND id IN
        <foreach item="item" index="index" collection="testcaseIds" open="(" separator="," close=")">#{item} </foreach>
        ORDER BY ${order}
    </select>

    <select id="countBy" resultType="long">
        SELECT count(1) c FROM testcase
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="enabled != null">and enabled = #{enabled}</if>
            <if test="createBy != null">and createBy = #{createBy}</if>
            <if test="projectId != null">and projectId = #{projectId}</if>
            <if test="caseName != null">and caseName = #{caseName}</if>
        </trim>
    </select>

    <select id="fetchContainsScripts" resultMap="BaseResultMap" >
        SELECT
        t.*,
        u.id as create_id, u.username as create_username, u.email as create_email, u.mobile as create_phone, u.userCode as create_userCode,
        u1.id as update_id, u1.username as update_username, u1.email as update_email, u1.mobile as update_phone, u1.userCode as update_userCode,
        d.id as detail_id, d.scriptId, d.testcaseId, d.seq,
        s.id as script_id, s.*
        FROM testcase t
        LEFT JOIN user u on t.createBy=u.id
        LEFT JOIN user u1 on t.updateBy=u1.id
        LEFT JOIN testcase_detail d on t.id=d.testcaseId
        LEFT JOIN script s on d.scriptId=s.id
        WHERE t.enabled = 1
        AND d.scriptId IN <foreach item="id" index="index" collection="scriptIds" open="(" separator="," close=")">#{id} </foreach>
    </select>

</mapper>