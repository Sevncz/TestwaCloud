<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.testwa.distest.server.mapper.TaskDeviceMapper" >
    <resultMap id="BaseResultMap" type="com.testwa.distest.server.entity.TaskDevice" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="status" property="status" jdbcType="TINYINT" typeHandler="com.testwa.core.base.mybatis.EnumValueHandler"/>
        <result column="taskCode" property="taskCode" jdbcType="BIGINT"/>
        <result column="deviceId" property="deviceId" jdbcType="VARCHAR" javaType="String"/>
        <result column="endTime" property="endTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="errorMsg" property="errorMsg" jdbcType="VARCHAR" javaType="String"/>
        <result column="taskType" property="taskType" jdbcType="TINYINT" typeHandler="com.testwa.core.base.mybatis.EnumValueHandler"/>

        <result column="projectId" property="projectId" jdbcType="BIGINT"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="updateBy" property="updateBy" jdbcType="BIGINT"/>
        <result column="createBy" property="createBy" jdbcType="BIGINT"/>
        <result column="enabled" property="enabled" jdbcType="BOOLEAN" />
    </resultMap>
    <resultMap id="StatisResultMap" type="com.testwa.distest.server.service.task.dto.TaskDeviceStatusStatis" >
        <result column="taskStatus" property="taskStatus" jdbcType="TINYINT" typeHandler="com.testwa.core.base.mybatis.EnumValueHandler"/>
        <result column="count" property="count" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List" >
        id,status,taskCode,deviceId,createTime,createBy,projectId,endTime,errorMsg,taskType
    </sql>

    <select id="findOne" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM task_device
        WHERE enabled = 1 AND id = #{key}
    </select>

    <select id="findOneByTaskCodeAndDeviceId" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM task_device
        WHERE enabled = 1 AND taskCode = #{taskCode} and deviceId = #{deviceId}
    </select>

    <select id="findBy" parameterType="com.testwa.distest.server.entity.TaskDevice" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM task_device
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            enabled = 1
            <if test="createBy != null">and createBy = #{createBy}</if>
            <if test="taskCode != null">and taskCode = #{taskCode}</if>
            <if test="deviceId != null">and deviceId = #{deviceId}</if>
        </trim>
    </select>

    <select id="findByTaskCode" parameterType="com.testwa.distest.server.entity.TaskDevice" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM task_device
        WHERE enabled = 1 AND taskCode = #{taskCode}
        order by status, endTime
    </select>

    <select id="countBy" resultType="long">
        SELECT count(1) c FROM task_device
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            enabled = 1
            <if test="status != null">and status = #{status, typeHandler=com.testwa.core.base.mybatis.EnumValueHandler}</if>
        </trim>
    </select>

    <select id="countTaskDeviceStatus" resultMap="StatisResultMap">
        SELECT count(1) as count, status as taskStatus
        FROM task_device
        where taskCode = #{taskCode} AND enabled = 1
        group by status
    </select>

    <update id="disableAll">
        update task_device
        set enabled = 0
        where taskCode = #{taskCode}
    </update>

</mapper>