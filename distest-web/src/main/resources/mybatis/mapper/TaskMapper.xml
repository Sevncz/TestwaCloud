<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.testwa.distest.server.mapper.TaskMapper" >
    <resultMap id="BaseResultMap" type="com.testwa.distest.server.entity.Task" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="taskCode" property="taskCode" jdbcType="BIGINT" />
        <result column="projectId" property="projectId" jdbcType="BIGINT"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="updateBy" property="updateBy" jdbcType="BIGINT"/>
        <result column="createBy" property="createBy" jdbcType="BIGINT"/>
        <result column="enabled" property="enabled" jdbcType="BOOLEAN" />
        <result column="endTime" property="endTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="devicesJson" property="devicesJson" jdbcType="VARCHAR" javaType="String"/>
        <result column="appJson" property="appJson" jdbcType="VARCHAR" javaType="String"/>
        <result column="testcaseJson" property="testcaseJson" jdbcType="VARCHAR" javaType="String"/>
        <result column="scriptJson" property="scriptJson" jdbcType="VARCHAR" javaType="String"/>
        <result column="taskType" property="taskType" jdbcType="TINYINT" />
    </resultMap>

    <sql id="Base_Column_List" >
        id,taskCode,projectId,createTime,createBy,endTime,devicesJson,appJson,testcaseJson,scriptJson,taskType,taskName,appId,status
    </sql>

    <select id="findBy" parameterType="com.testwa.distest.server.entity.Task" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM task
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            enabled = 1
            <if test="createBy != null">and createBy = #{createBy}</if>
            <if test="projectId != null">and projectId = #{projectId}</if>
            <if test="appId != null">and appId = #{appId}</if>
            <if test="taskCode != null">and taskCode = #{taskCode}</if>
            <if test="taskName != null">and taskName LIKE CONCAT('%', #{taskName}, '%')</if>
        </trim>
    </select>

    <select id="findFinishBy" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM task
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            enabled = 1
            and status != 0 and status != 1
            <if test="query.createBy != null">and createBy = #{query.createBy}</if>
            <if test="query.projectId != null">and projectId = #{query.projectId}</if>
            <if test="query.appId != null">and appId = #{query.appId}</if>
            <if test="query.taskCode != null">and taskCode = #{query.taskCode}</if>
            <if test="query.taskName != null">and taskName LIKE CONCAT('%', #{query.taskName}, '%')</if>
            <if test="startTime != null">and createTime &gt;= from_unixtime(#{startTime})</if>
            <if test="endTime != null">and createTime &lt;= from_unixtime(#{endTime})</if>
        </trim>
    </select>

    <select id="countBy" resultType="long">
        SELECT count(1) c FROM task
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            enabled = 1
            <if test="projectId != null">and projectId = #{projectId}</if>
            <if test="appId != null">and appId = #{appId}</if>
            <if test="taskType != null">and taskType = #{taskType}</if>
        </trim>
    </select>

    <select id="findByCode" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM task
        WHERE taskCode = #{taskCode} and enabled = 1
    </select>

    <update id="finish" >
        update task
        set endTime = #{endTime}, status = #{status}
        where taskCode = #{taskCode}
    </update>

    <update id="disable" >
        update task
        set enabled = 0
        where taskCode = #{taskCode}
    </update>

    <update id="disableAll" >
        update task
        set enabled = 0
        where taskCode in
        <foreach item="item" index="index" collection="taskCodes" open="(" separator="," close=")">#{item} </foreach>
    </update>

    <select id="countAppTest" resultType="com.testwa.distest.server.service.task.dto.CountAppTestStatisDTO">
        select count(*) as count, appId, taskType
        from task
        where enabled = 1 and projectId = #{projectId}
        <if test="startTime != null">and createTime &gt;= from_unixtime(#{startTime})</if>
        <if test="endTime != null">and createTime &lt;= from_unixtime(#{endTime})</if>
        group by appId, taskType
        order by appId
    </select>

    <select id="countMemberTest" resultType="com.testwa.distest.server.service.task.dto.CountMemberTestStatisDTO">
        select count(*) as count, createBy as memberId, taskType
        from task
        where enabled = 1 and projectId = #{projectId}
        <if test="startTime != null">and createTime &gt;= from_unixtime(#{startTime})</if>
        <if test="endTime != null">and createTime &lt;= from_unixtime(#{endTime})</if>
        group by createBy, taskType
        order by createBy
    </select>

    <select id="countElapsedTimeByDay" resultType="com.testwa.distest.server.service.task.dto.CountElapsedTimeStatisDTO">
        select UNIX_TIMESTAMP(endTime) - UNIX_TIMESTAMP(createTime) as second, DATE_FORMAT( createTime, "%Y-%m-%d" ) as day
        from task
        where enabled = 1 and endTime is not null
        <if test="startTime != null">and createTime &gt;= from_unixtime(#{startTime})</if>
        <if test="endTime != null">and createTime &lt;= from_unixtime(#{endTime})</if>
        <if test="projectId != null">and projectId = #{projectId}</if>
        <if test="userId != null">and createBy = #{userId}</if>
        GROUP BY DATE_FORMAT( createTime, "%Y-%m-%d" )
        order by createTime
    </select>

</mapper>