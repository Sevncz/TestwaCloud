# websocket 配置
wss.server.port=9092
wss.server.host=0.0.0.0

# 本地server配置
server.port=8080
server.context-path=/testwa

security.basic.enabled=false

#Client
app.client.id=sso-auth-client
app.client.secret=mySecret

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Logging
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
logging.level.org.springframework.scheduling.quartz=INFO

logging.level.org.quartz=INFO

# Plugins for Quartz
#logging.level.org.quartz.plugin.triggerHistory=DEBUG
#logging.level.org.quartz.plugin.jobHistory=DEBUG

# MongoDB Job Store
logging.level.com.testwa.distest.server.quartz=INFO


logging.config=classpath:log4j2.xml

# mongodb
spring.data.mongodb.uri=mongodb://localhost:27017/testwa_center

# logging.level.org.springframework.data.document.mongodb=INFO

# REDIS (RedisProperties)

mybatis.type-aliases-package=com.testwa.core.entity
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
#数据库配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/distest-web?characterEncoding=utf8&useSSL=true
spring.datasource.username=root
spring.datasource.password=root
# 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

# Druid 数据源配置，继承spring.datasource.* 配置，相同则覆盖
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/distest-web?characterEncoding=utf8&useSSL=true
spring.datasource.druid.username=root
spring.datasource.druid.password=root
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=5
spring.datasource.druid.max-wait=600000
spring.datasource.druid.remove-abandoned=true
spring.datasource.druid.remove-abandoned-timeout=180
spring.datasource.druid.time-between-eviction-runs-millis=600000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM t_users
spring.datasource.druid.test-while-idle=true

spring.messages.basename=i18n/message
spring.messages.cache-seconds=1000

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# appium日志保存路径
appium.log.path=/Users/wen/dev/testWa/center/appium
# 截图保存路径
screeshot.path=/Users/wen/dev/testWa/center/screen
# app保存路径
app.save.path=/Users/wen/dev/testWa/center/app
# 脚本保存路径
script.save.path=/Users/wen/dev/testWa/center/script
# logcat保存路径
logcat.path=/Users/wen/dev/testWa/center/logcat

# 上传文件大小
spring.http.multipart.maxFileSize=100Mb
spring.http.multipart.maxRequestSize=1000Mb

# redis
redis.retry.times=2

redis.client[0].name=BeidouRedis1
redis.client[0].host=127.0.0.1
redis.client[0].port=6379
redis.client[0].timeout=5000
redis.client[0].password=foobared

redis.client[1].name=BeidouRedis2
redis.client[1].host=127.0.0.1
redis.client[1].port=6380
redis.client[1].timeout=5000
redis.client[1].password=foobared

redis.evictor-delay-check-seconds=300
redis.evictor-check-period-seconds=30
redis.evictor-failed-times-to-be-tick-out=6

jwt.header=X-TOKEN
jwt.secret=hGHxP9lWJzKc0UyZ
jwt.access_token.expiration=7200
jwt.refresh_token.expiration=604800
jwt.route.authentication.path=/auth/login
jwt.route.authentication.refresh=/auth/token

# quartz
quartz.enabled=true

# web cache
user.history.size = 10