server.port=8080
server.context-path=/
# websocket 配置
wss.server.port=9092
wss.server.host=0.0.0.0

security.basic.enabled=false

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Logging
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
logging.config=classpath:logback-test-spring.xml
logging.path=/Users/wen/logs

# mongodb
#spring.data.mongodb.uri=mongodb://localhost:27017/distest-web
dis-mongo.host=127.0.0.1
dis-mongo.port=27017
#dis-mongo.replica-set=
dis-mongo.username=
dis-mongo.password=
dis-mongo.database=distest-web
dis-mongo.connections-per-host=5
dis-mongo.min-connections-per-host=2

# logging.level.org.springframework.data.document.mongodb=INFO

# REDIS (RedisProperties)

mybatis.type-aliases-package=com.testwa.distest.server.entity
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.type-handlers-package=com.testwa.core.base.mybatis.handler
#数据库配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/distest-web?characterEncoding=utf8&useSSL=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
# 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

# Druid 数据源配置，继承spring.datasource.* 配置，相同则覆盖
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/distest-web?characterEncoding=utf8&useSSL=true&serverTimezone=UTC
spring.datasource.druid.username=root
spring.datasource.druid.password=root
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=5
spring.datasource.druid.max-wait=600000
spring.datasource.druid.remove-abandoned=true
spring.datasource.druid.remove-abandoned-timeout=180
spring.datasource.druid.time-between-eviction-runs-millis=600000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM user
spring.datasource.druid.test-while-idle=true

spring.messages.basename=classpath:i18n/message
spring.messages.cache-seconds=1000

spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# rabbit
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=testwa
spring.rabbitmq.password=opqrst
spring.rabbitmq.virtualHost=/

# 上传文件大小
spring.http.multipart.maxFileSize=1000Mb
spring.http.multipart.maxRequestSize=10000Mb

# redis
dis-redis.retry-times=2
dis-redis.evictor-delay-check-seconds=300
dis-redis.evictor-check-period-seconds=30
dis-redis.evictor-failed-times-to-be-tick-out=6

dis-redis.group[0].client[0].name=DistestRedis1
dis-redis.group[0].client[0].host=127.0.0.1
dis-redis.group[0].client[0].port=21000
dis-redis.group[0].client[0].timeout=5000
dis-redis.group[0].client[0].password=

dis-redis.group[0].client[1].name=DistestRedis2
dis-redis.group[0].client[1].host=127.0.0.1
dis-redis.group[0].client[1].port=22000
dis-redis.group[0].client[1].timeout=5000
dis-redis.group[0].client[1].password=


# 文件保存路径
base.static.dir=/Users/wen/dev/testWa/center

dis-file.dist=${base.static.dir}/dist
# appium日志保存路径
dis-file.appium=${base.static.dir}/appium
# 截图保存路径
dis-file.screeshot=${base.static.dir}/screen
# app保存路径
dis-file.app=${base.static.dir}/app
# 脚本保存路径
dis-file.script=${base.static.dir}/script
# logcat保存路径
dis-file.logcat=${base.static.dir}/logcat

dis-id.worker-id=0

jwt.header=X-TOKEN
jwt.secret=hGHxP9lWJzKc0UyZ
# 8 hour
jwt.access_token.expiration=28800
# 30 days
jwt.refresh_token.expiration=2592000

# web cache
user.history.size = 5

# grpc
spring.application.name=grpc-server
grpc.port=6565
eureka.instance.non-secure-port=${grpc.port}
eureka.client.service-url.defaultZone=http://admin:cUCXYV9oc0IEv3Rg@localhost:30001/eureka/

dis-logdog.py=/Users/wen/IdeaProjects/distest/distest-web/logdog/logdog.py
register.active.url=http://127.0.0.1:${server.port}/v1/auth/active
password.reset.url=http://127.0.0.1:${server.port}/v1/auth/reset/password

# 分钟
lock.debug.expire = 15
lock.work.expire = 60