package com.testwa.distest.client;import io.grpc.stub.StreamObserver;import lombok.extern.slf4j.Slf4j;import java.util.ArrayList;import java.util.List;import java.util.concurrent.ConcurrentHashMap;/** * @Program: distest * @Description: * @Author: wen * @Create: 2018-05-08 19:20 **/@Slf4jpublic class DeviceClientCache {    private static volatile ConcurrentHashMap<String, DeviceClient> cache = new ConcurrentHashMap<>();    public static void add(String serial, DeviceClient client){        cache.put(serial, client);    }    public static DeviceClient get(String serial){        return cache.get(serial);    }    public static List<DeviceClient> all(){        return new ArrayList<>(cache.values());    }    public static void remove(String serial){        DeviceClient dc = cache.get(serial);        if(dc != null){            dc.logoutFromServer();            dc.stop();            dc = null;        }        cache.remove(serial);    }}