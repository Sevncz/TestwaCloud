package com.testwa.distest.client.component.executor;import com.testwa.core.cmd.RemoteRunCommand;import com.testwa.distest.client.ApplicationContextUtil;import com.testwa.distest.client.component.appium.manager.CustomAppiumManager;import com.testwa.distest.client.component.appium.pool.CustomAppiumManagerPool;import com.testwa.distest.client.component.executor.worker.AndroidExecutorFactory;import com.testwa.distest.client.component.executor.worker.FunctionalAbstractExecutor;import com.testwa.distest.client.service.GrpcClientService;import lombok.extern.slf4j.Slf4j;@Slf4jpublic class FunctionalTestTask extends AbstractTestTask{    private RemoteRunCommand cmd;    private FunctionalAbstractExecutor executor;    private CustomAppiumManagerPool pool;    private CustomAppiumManager manager;    private TestTaskListener listener;    public FunctionalTestTask(RemoteRunCommand cmd, TestTaskListener listener){        this.cmd = cmd;        this.listener = listener;    }    public void start() {        pool = (CustomAppiumManagerPool) ApplicationContextUtil.getBean("customAppiumManagerPool");        GrpcClientService grpcClientService = (GrpcClientService) ApplicationContextUtil.getBean("grpcClientService");        manager = pool.getManager();        String appiumLogPath = manager.getAppiumlogPath();        if(manager.getAppiumService().isRunning()){            try {                String appiumUrl = manager.getAppiumService().getUrl().toString();                AndroidExecutorFactory executorFactory = new AndroidExecutorFactory();                executor = executorFactory.getFunctionalPythonTask(cmd);                executor.init(appiumUrl, cmd, listener);                executor.start();            } catch (Exception e){                log.error("{} 任务执行错误", cmd.getDeviceId(), e);                grpcClientService.gameover(cmd.getTaskCode(), cmd.getDeviceId(), e.getMessage());            } finally {                grpcClientService.appiumLogUpload(cmd.getTaskCode(), cmd.getDeviceId(), appiumLogPath);            }        }else{            log.error("Appium 启动失败");            grpcClientService.gameover(cmd.getTaskCode(), cmd.getDeviceId(), "Appium 启动失败");        }        try {            pool.release(manager);        } catch (Exception e) {            log.warn("appium release error.... .... ");        }    }    public void terminate() {        log.info("设备 {} 测试任务被停止", cmd.getDeviceId());        if (executor != null) {            executor.stop();        }        if(pool != null){            pool.release(manager);        }    }}