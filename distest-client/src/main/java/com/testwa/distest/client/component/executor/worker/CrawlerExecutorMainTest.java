package com.testwa.distest.client.component.executor.worker;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.serializer.SerializerFeature;import com.fasterxml.jackson.databind.JsonNode;import com.fasterxml.jackson.databind.ObjectMapper;import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;import com.testerhome.appcrawler.AppCrawler;import com.testerhome.appcrawler.Crawler;import com.testerhome.appcrawler.CrawlerConf;import com.testwa.distest.client.appcrawler.JCrawlerConfig;import io.appium.java_client.remote.AndroidMobileCapabilityType;import lombok.extern.slf4j.Slf4j;import java.io.IOException;import java.nio.file.Path;import java.nio.file.Paths;/** * @Program: distest * @Description: 遍历测试执行器 * @Author: wen * @Create: 2018-07-19 18:35 **/@Slf4jpublic class CrawlerExecutorMainTest {    public static void run() throws IOException {        Path resultDir = Paths.get("/Users/wen/dev/Crawler-test/output");        JCrawlerConfig twCrawlerConfig = new JCrawlerConfig();        twCrawlerConfig.setReportTitle("TESTWA遍历测试报告");        twCrawlerConfig.setResultDir(resultDir.toString());//        twCrawlerConfig.getPluginList().add("com.testerhome.appcrawler.plugin.ReportPlugin");        twCrawlerConfig.getCapability().put("app", "/Users/wen/dev/Crawler-test/CloudMusic_official_5.3.1.588831.apk");        twCrawlerConfig.getCapability().put("appium", "http://127.0.0.1:4723/wd/hub");        twCrawlerConfig.getCapability().put("platformName", "Android");        twCrawlerConfig.getCapability().put("automationName", "uiautomator2");        twCrawlerConfig.getCapability().put("deviceName", "vivo");        twCrawlerConfig.getCapability().put("udid", "8c2b6aee");        twCrawlerConfig.getCapability().put("newCommandTimeout", 20);        twCrawlerConfig.getCapability().put("autoLaunch", true);        twCrawlerConfig.getAndroidCapability().put(AndroidMobileCapabilityType.APP_PACKAGE, "com.netease.cloudmusic");        twCrawlerConfig.getAndroidCapability().put(AndroidMobileCapabilityType.APP_ACTIVITY, "com.netease.cloudmusic.activity.LoadingActivity");        twCrawlerConfig.getAndroidCapability().put(AndroidMobileCapabilityType.DONT_STOP_APP_ON_RESET, true);        twCrawlerConfig.getAndroidCapability().put(AndroidMobileCapabilityType.NO_SIGN, false);//        twCrawlerConfig.getBlackList().add("//android.widget.TextView[@resource-id='com.netease.cloudmusic:id/aag']");        twCrawlerConfig.addTriggerAction("18600753024", "//*[contains(@text,'请输入手机号')]", 1);        twCrawlerConfig.addTriggerAction("wen19880528", "//*[contains(@text,'请输入密码')]", 1);//        twCrawlerConfig.addTriggerAction("click", "//*[contains(@text,'登录')]", 1);//        twCrawlerConfig.getFirstList().add("//*[@resource-id='com.netease.cloudmusic:id/ki']");        twCrawlerConfig.getFirstList().add("//*[@resource-id='com.netease.cloudmusic:id/kh']");        String jsonNodeString = JSON.toJSONString(twCrawlerConfig, SerializerFeature.WriteMapNullValue);        JsonNode jsonNodeTree = new ObjectMapper().readTree(jsonNodeString);        String yaml = new YAMLMapper().writeValueAsString(jsonNodeTree);        CrawlerConf crawlerConf = new CrawlerConf();        crawlerConf = crawlerConf.loadYaml(yaml);        crawlerConf.androidInit();        AppCrawler.setGlobalEncoding();        System.out.println(crawlerConf.toYaml());        Crawler crawler = new Crawler();        crawler.loadConf(crawlerConf);        crawler.start(null);    }    public static void main(String[] args) throws IOException {        run();    }}