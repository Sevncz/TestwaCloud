package com.testwa.distest.client.component.executor.uiautomator2;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONException;import java.io.IOException;public class Response {    private static final String ERR_MSG = "Unable to extract '%s' from body '%s'.";    private final String body;    private final int code;    public Response(final okhttp3.Response response) throws IOException {        body = response.body().string();        code = response.code();    }    public boolean isSuccessful() {        return code == 200 && getStatus() == 0;    }    public String getElementId() {        try {            return JSON.parseObject(body).getJSONObject("value")                    .getString("ELEMENT");        } catch (JSONException e) {            throw new IllegalArgumentException(String.format(ERR_MSG, "ELEMENT", body), e);        }    }    public String getSessionId() {        try {            return JSON.parseObject(body).getString("sessionId");        } catch (JSONException e) {            throw new IllegalArgumentException(String.format(ERR_MSG, "sessionId", body), e);        }    }    public int getStatus() {        try {            return JSON.parseObject(body).getInteger("status");        } catch (JSONException e) {            throw new IllegalArgumentException(String.format(ERR_MSG, "getSource", body), e);        }    }    public int code() {        return code;    }    @SuppressWarnings("unchecked")    public <T> T getValue() {        try {            return (T) JSON.parseObject(body).get("value");        } catch (JSONException e) {            throw new IllegalArgumentException(String.format(ERR_MSG, "value", body), e);        }    }    @Override    public String toString() {        return String.format("Code:%d; Body:%s;", code, body);    }}