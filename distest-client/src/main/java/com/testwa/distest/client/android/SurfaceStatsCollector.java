package com.testwa.distest.client.android;import lombok.Data;import org.apache.commons.lang3.StringUtils;import java.io.Closeable;import java.io.IOException;import java.util.ArrayList;import java.util.List;/** * @Program: distest * @Description: * @Author: wen * @Create: 2018-08-14 11:54 **/public class SurfaceStatsCollector extends Thread implements Closeable {    private String deviceId;    public SurfaceStatsCollector (String deviceId) {        this.deviceId = deviceId;    }    public void start() {        if(clearSurfaceFlingerLatencyData()) {        }    }    private boolean clearSurfaceFlingerLatencyData() {        String result = ADBCommandUtils.shellCommand(deviceId, new String[]{"dumpsys", "SurfaceFlinger", "--latency-clear", "SurfaceView"});        return StringUtils.isBlank(result);    }    private FrameDate getSurfaceFlingerFrameDate() {        FrameDate frameDate = new FrameDate();        String result = ADBCommandUtils.shellCommand(deviceId, new String[]{"dumpsys", "SurfaceFlinger", "--latency", "SurfaceView"});        if(StringUtils.isBlank(result)) {            return frameDate;        }        String[] results = result.split("\n");        List<Long> timestamps = new ArrayList<>();        Double nanoseconds_per_second = 1e9;        Double refresh_period = Long.parseLong(results[0]) / nanoseconds_per_second;        Integer pending_fence_timestamp = (1 << 63) - 1;        return frameDate;    }    @Data    class FrameDate {        private Long timestamps;        private Long refreshPeriod;    }    @Override    public void run() {    }    @Override    public void close() throws IOException {    }}