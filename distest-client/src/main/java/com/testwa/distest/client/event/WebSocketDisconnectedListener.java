package com.testwa.distest.client.event;import com.github.cosysoft.device.android.AndroidDevice;import com.github.cosysoft.device.android.impl.AndroidDeviceStore;import com.testwa.distest.client.grpc.GrpcClient;import com.testwa.distest.client.service.GrpcClientService;import io.grpc.Channel;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.ApplicationContext;import org.springframework.context.ApplicationListener;import org.springframework.scheduling.annotation.Async;import org.springframework.stereotype.Component;import java.util.TreeSet;@Slf4j@Componentpublic class WebSocketDisconnectedListener implements ApplicationListener<WebSocketDisconnectedEvent> {    @GrpcClient("local-grpc-server")    private Channel serverChannel;    @Autowired    private GrpcClientService grpcClientService;    @Autowired    private ApplicationContext context;    @Async    @Override    public void onApplicationEvent(WebSocketDisconnectedEvent webSocketDisconnectedEvent) {        log.info("Event: Websocket Disconnected, notify offline and disconnect event");        TreeSet<AndroidDevice> androidDevices = AndroidDeviceStore.getInstance().getDevices();        for (AndroidDevice ad : androidDevices) {            context.publishEvent(new DeviceOfflineEvent(this, ad.getSerialNumber()));            context.publishEvent(new DeviceDisconnectEvent(this, ad.getSerialNumber()));        }    }}