package com.testwa.distest.client.service;import com.android.ddmlib.IDevice;import com.testwa.distest.client.ApplicationContextUtil;import com.testwa.distest.client.control.client.Clients;import com.testwa.distest.client.control.client.RemoteClient;import com.testwa.distest.client.grpc.GrpcClient;import com.testwa.distest.client.model.UserInfo;import io.grpc.Channel;import org.springframework.core.env.Environment;import org.springframework.stereotype.Service;import java.io.IOException;import java.net.URISyntaxException;@Servicepublic class GrpcClientService {    @GrpcClient("local-grpc-server")    private Channel serverChannel;    public void createRemoteClient(IDevice device){        Environment env = ApplicationContextUtil.getApplicationContext().getEnvironment();        String url = env.getProperty("agent.socket.url");        String webHost = env.getProperty("grpc.host");        Integer webPort = Integer.parseInt(env.getProperty("grpc.port"));        String wsUrl = String.format("%s?token=%s&type=device&serial=%s&from=BaseClient", url, UserInfo.token, device.getSerialNumber());        try {            RemoteClient remoteClient = new RemoteClient(wsUrl, "", device.getSerialNumber(), webHost, webPort, serverChannel);            Clients.add(device.getSerialNumber(), remoteClient);        } catch (IOException | URISyntaxException e) {            e.printStackTrace();        }    }}